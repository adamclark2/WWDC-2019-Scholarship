import AppKit
import SpriteKit
import PlaygroundSupport
import Foundation

/**
 A helper object to detect clicks
 
 SKScene's can delegate the task of detecting clicks to an instance of ClickDetector
 T should be the same type as the consuming SKScene.
 
 The SKScenes's mouseDown function should call detectClick
 
 ClickDetector is used in all the SceneControllers. Take a look in the SceneController folder
 to see some examples. 
*/
public class ClickDetector<T: SKScene> {
    
    /**
        Detects which SKNode was clicked and calls the associated method in the callTable
        this method should be called in the function mouseDown
     
        - parameter event The event generated by the mouse click
        - parameter view the SKView associated with the current display
        - parameter this the SKScene whos nodes we are checking for clicks
        - parameter callTable a call table that maps the name of a node to a function. The parameter this is used for the self of the method call
    */
    func detectClick(event: NSEvent, view: SKView?, this: T, callTable: [(btnName: String, function: (T) -> () -> Void)]){
        let eventPos: NSPoint = view!.convert(event.locationInWindow, to: view!.scene!)
        let buttons: [SKNode] = this.nodes(at: eventPos)

        // Look through the button list to see if there is a collision
        // If there is then look through the function table to find somthing
        // to call
        for (_, btn) in buttons.enumerated() {
            for (_, callable) in callTable.enumerated() {
                if(callable.btnName == btn.name){
                    callable.function(this)();
                }
            }
        }
    }
    
}
